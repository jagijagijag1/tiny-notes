<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>記事メモ on jagijagijag1 tiny tech notes</title><link>https://jagijagijag1.github.io/tiny-note/categories/%E8%A8%98%E4%BA%8B%E3%83%A1%E3%83%A2/</link><description>Recent content in 記事メモ on jagijagijag1 tiny tech notes</description><generator>Hugo -- gohugo.io</generator><language>ja-jp</language><lastBuildDate>Fri, 07 Aug 2020 22:32:42 +0900</lastBuildDate><atom:link href="https://jagijagijag1.github.io/tiny-note/categories/%E8%A8%98%E4%BA%8B%E3%83%A1%E3%83%A2/index.xml" rel="self" type="application/rss+xml"/><item><title>Financial Services Industry Lens - AWS Well-Architected Framework</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_08_07_22_32_42/</link><pubDate>Fri, 07 Aug 2020 22:32:42 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_08_07_22_32_42/</guid><description>AWS Well-Architectedの金融特化版を読んで気になったところのメモ https://docs.aws.amazon.com/whitepapers/latest/wellarchitected-financial-services-industry-lens/welcome.html 設定時に注意すべきIAMのアクションが提示されている https://docs.aws.amazon.com/general/latest/gr/aws-security-audit-guide.html#aws-security-audit-review-policy-tips https://docs.aws.amazon.com/wellarchitected/latest/financial-services-industry-lens/aws-identity-and-access-management-iam.html 扱うデ</description></item><item><title>Is There a Single Method for the Internet of Things?</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_08_03_12_55_39/</link><pubDate>Mon, 03 Aug 2020 12:55:39 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_08_03_12_55_39/</guid><description>著者 Ivar Jacobson, Ian Spence, Pan-Wei Ng 出典 acmqueue Volume 15, issue 3, July 11, 2017 (Is There a Single Method for the Internet of Things? - ACM Queue) 所感 Essence本で紹介されてたのでEssenceのIoT適用事例が見れると</description></item><item><title>Machine Learning for a Better Developer Experience</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_07_27_21_29_21/</link><pubDate>Mon, 27 Jul 2020 21:29:21 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_07_27_21_29_21/</guid><description>リンク Machine Learning for a Better Developer Experience | by Netflix Technology Blog | Jul, 2020 | Netflix TechBlog 抜粋・メモ バグ調査で全ログ分析は大変 25GB, 3万行とかのときも 膨大なログに対し，正常なときとの差分をチェ</description></item><item><title>SLOG: serializable, low-latency, geo-replicated transactions</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_07_22_22_36_52/</link><pubDate>Wed, 22 Jul 2020 22:36:52 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_07_22_22_36_52/</guid><description>リンク SLOG: serializable, low-latency, geo-replicated transactions | the morning paper 抜粋・メモ シリアライザブルの実現にはcoodinationが必要で，そのため性能が犠牲になる challenge with strict serializability (or even just serializability on a regular DBMS)</description></item><item><title>Cloudburst: stateful functions-as-a-service</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_07_21_23_05_23/</link><pubDate>Tue, 21 Jul 2020 23:05:23 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_07_21_23_05_23/</guid><description>リンク Cloudburst: stateful functions-as-a-service | the morning paper 抜粋・メモ 関数実行の近くにデータをキャッシュするdata shipping技術を提案 (キャッシュされたデータの近くに関数を</description></item><item><title>Meaningful availability</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_07_20_15_33_12/</link><pubDate>Mon, 20 Jul 2020 15:33:12 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_07_20_15_33_12/</guid><description>リンク Meaningful availability | the morning paper 抜粋・メモ 可用性のメトリクスはmeaningfulでpropotionalでactionableで有るべきだが世間ではそう</description></item><item><title>Millions of tiny databases</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_04_21_11_24_21/</link><pubDate>Tue, 21 Apr 2020 11:24:21 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_04_21_11_24_21/</guid><description>リンク Millions of tiny databases – the morning paper 抜粋・メモ AWS EBSのprimary, replicaストレージノードが参照するconfig情報を保持する分散処理技術 co</description></item><item><title>Narrowing the gap between serverless and its state with storage functions</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_04_14_11_02_22/</link><pubDate>Tue, 14 Apr 2020 11:02:22 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_04_14_11_02_22/</guid><description>リンク Narrowing the gap between serverless and its state with storage functions – the morning paper 抜粋・メモ サーバーレス関数はステート・データを外出しするのでそこがボトルネックになりがち そこで，ストレー</description></item><item><title>Coyote: Making it easier for developers to build reliable asynchronous software</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_04_13_13_51_43/</link><pubDate>Mon, 13 Apr 2020 13:51:43 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_04_13_13_51_43/</guid><description>リンク Coyote: Making it easier for developers to build reliable asynchronous software - Microsoft Research 抜粋・メモ 分散システムのバグ発見：fault-inejctionやstress testはセットアップが複雑</description></item><item><title>Gandalf: an intelligent, end-to-end analytics service for safe deployment in cloud-scale infrastructure</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_04_07_21_31_31/</link><pubDate>Tue, 07 Apr 2020 21:31:31 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_04_07_21_31_31/</guid><description>リンク Gandalf: an intelligent, end-to-end analytics service for safe deployment in cloud-scale infrastructure – the morning paper 抜粋・メモ 問題が起きてからどのデプロイが問題だった理解するのは簡単じゃない → Gandalfがデータ分析</description></item><item><title>Local-first software: you own your data, in spite of the cloud</title><link>https://jagijagijag1.github.io/tiny-note/posts/2020_02_23_19_02_37/</link><pubDate>Sun, 23 Feb 2020 19:02:37 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2020_02_23_19_02_37/</guid><description>リンク Local-first software: you own your data, in spite of the cloud – the morning paper 抜粋・メモ コンセプトは動画見るのがわかりやすい クラウドアプリだとサーバ経由でしかデータアクセスできない＝</description></item><item><title>Task-based effectiveness of basic visualizations</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_12_01_21_04_12/</link><pubDate>Sun, 01 Dec 2019 21:04:12 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_12_01_21_04_12/</guid><description>リンク Task-based effectiveness of basic visualizations the morning paper 抜粋・メモ どういうタスクのときにどの可視化手法を使うと良いかを調査 Amazon Mechanical Turkでタスクやってもらって評価 対象にしたのは</description></item><item><title>The inflection point hypothesis: a principled approach to finding the root cause of a failure</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_11_16_17_50_32/</link><pubDate>Sat, 16 Nov 2019 17:50:32 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_11_16_17_50_32/</guid><description>リンク The inflection point hypothesis: a principled approach to finding the root cause of a failure the morning paper 抜粋・メモ Kairux: 提案手法 普通のroot cause analysisはfailureからbackwardで探すが，</description></item><item><title>Stop explaining black box machine learning models for high stakes decisions and use interpretable models instead</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_11_10_22_23_00/</link><pubDate>Sun, 10 Nov 2019 22:23:00 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_11_10_22_23_00/</guid><description>リンク Stop explaining black box machine learning models for high stakes decisions and use interpretable models instead the morning paper 抜粋・メモ 説明可能AIという言葉のイマイチさと解釈可能AIの正しそう感 既存技術は機械学習モデルを</description></item><item><title>How bad can it git? Characterizing secret leakage in public GitHub repositories</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_04_21_20_45_43/</link><pubDate>Sun, 21 Apr 2019 20:45:43 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_04_21_20_45_43/</guid><description>リンク How bad can it git? Characterizing secret leakage in public GitHub repositories | the morning paper 抜粋・メモ GitHubのリポジトリにsecret keyが公開されるケースの調査論文 公開されてしまったs</description></item><item><title>Teaching rigorous distributed systems with efficient model checking</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_04_20_20_35_31/</link><pubDate>Sat, 20 Apr 2019 20:35:31 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_04_20_20_35_31/</guid><description>リンク Teaching rigorous distributed systems with efficient model checking | the morning paper 抜粋・メモ 学生に分散アルゴリズムを勉強させる際に，テストでの確認は難しいので，モデル検査を組み込んだ環境(フレ</description></item><item><title>REPT: reverse debugging of failures in deployed software</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_03_16_22_40_13/</link><pubDate>Sat, 16 Mar 2019 22:40:13 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_03_16_22_40_13/</guid><description>リンク REPT: reverse debugging of failures in deployed software | the morning paper 抜粋・メモ 特にメモリダンプしか手に入らない状態での本番環境のクラッシュをデバッグ支援技術 REPTの提案 reco</description></item><item><title>A PHP2UML model transformation for PHP reverse engineering</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_03_10_20_55_51/</link><pubDate>Sun, 10 Mar 2019 20:55:51 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_03_10_20_55_51/</guid><description>リンク A PHP2UML model transformation for PHP reverse engineering 抜粋・メモ PHPソースコードを解析してUML図を生成 MoDiscoをPHPに拡張，ASTとしてEclipse PHP Development Too</description></item><item><title>「コンテナ技術入門」の記事を追いかけたときのメモ</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_02_10_22_50_32/</link><pubDate>Sun, 10 Feb 2019 22:50:32 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_02_10_22_50_32/</guid><description>読んだ記事 コンテナ技術入門 - 仮想化との違いを知り、要素技術を触って学ぼう - エンジニアHub｜若手Webエンジニアのキャリアを考える！ 自分の前</description></item><item><title>SageDB: a learned database system</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_02_07_21_59_39/</link><pubDate>Thu, 07 Feb 2019 21:59:39 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_02_07_21_59_39/</guid><description>リンク SageDB: a learned database system | the morning paper 抜粋・メモ The core idea behind SageDB is to build one or more models about the data and workload distribution and based on them automatically build the best data structures and algorithms for all components of the database system. データや負荷分布のモデルを作り，</description></item><item><title>Our learnings from adopting GraphQL</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_01_27_19_06_32/</link><pubDate>Sun, 27 Jan 2019 19:06:32 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_01_27_19_06_32/</guid><description>リンク Our learnings from adopting GraphQL – Netflix TechBlog – Medium 抜粋・メモ クライアントと各種REST APIとの間にGraphQLを挟むよう改修した Benefits 多くのデータがデータセンタ内を</description></item><item><title>Darwinian data structure selection</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_01_20_16_34_40/</link><pubDate>Sun, 20 Jan 2019 16:34:40 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_01_20_16_34_40/</guid><description>リンク Darwinian data structure selection | the morning paper 抜粋・メモ 複数の実装を取りうる抽象データ型(e.g. List)について，既存のテストをつかってどの具体的なデータ型(e</description></item><item><title>Capturing and enhancing in situ system observability for failure detection</title><link>https://jagijagijag1.github.io/tiny-note/posts/2019_01_19_18_07_19/</link><pubDate>Sat, 19 Jan 2019 18:07:19 +0900</pubDate><guid>https://jagijagijag1.github.io/tiny-note/posts/2019_01_19_18_07_19/</guid><description>リンク Capturing and enhancing in situ system observability for failure detection | the morning paper 抜粋・メモ 従来の分散システムの監視：クライアントはログとってリトライなりの対処する＋それとは別に障害を検出</description></item></channel></rss>